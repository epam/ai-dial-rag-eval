stages:
  - tag
  - test
  - build
  - publish


test:
  image: python:${PYTHON_VERSION}-slim
  stage: test
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.9", "3.10", "3.11", "3.12"]
  before_script:
    - pip install poetry==1.8.2 nox==2023.4.22
  script:
    - nox -p ${PYTHON_VERSION}
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "development"
    - if: $CI_COMMIT_BRANCH  == "development"
  tags:
    - kubernetes
  artifacts:
    when: always
    reports:
      junit: junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml


build:
  image: python:3.11-slim
  stage: build
  before_script:
    - apt-get -qq update
    - apt-get install -y --no-install-recommends git
    - pip install poetry==1.8.2
  script:
    - poetry self add poetry-git-version-plugin
    - poetry build
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "development"
    - if: $CI_COMMIT_BRANCH  == "development"
    - if: $CI_COMMIT_TAG
  tags:
    - kubernetes
  artifacts:
    paths:
      - dist


"Tag branch":
  image: alpine/git:v2.32.0
  stage: tag
  script:
    - ver=$(echo -n $CI_COMMIT_REF_NAME | cut -f 2 -d '-') || ver=0.0
    - minor_tag=$(git describe --abbrev=0 --tags --match ${ver}.* | cut -f 3 -d '.' || echo "")
    - '[ -n "$minor_tag" ] && release_tag=${ver}.$(( minor_tag+1 )) || release_tag=${ver}.0'
    - git remote set-url origin https://$GITLAB_ROBOT_NAME:$GITLAB_ROBOT_PUSH_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git
    - git config user.name $GITLAB_ROBOT_NAME
    - git config user.email ${GITLAB_ROBOT_EMAIL}
    - git diff --quiet && git diff --staged --quiet || git commit -am "RobotBuild ${release_tag}"
    - git tag ${release_tag}
    - git push origin HEAD:${CI_COMMIT_REF_NAME} --tags
  dependencies: []
  rules:
    - if: "$CI_COMMIT_REF_SLUG =~ /^release-/ && $CI_COMMIT_MESSAGE !~ /^RobotBuild/ && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != 'development'"
  tags:
    - kubernetes


publish:
  image: python:3.11-slim
  stage: publish
  variables:
    POETRY_REPOSITORIES_ARTIFACTORY_DEV_URL: ${ARTIFACTORY_URL}/api/pypi/${ARTIFACTORY_PYTHON_DEV_REPOSITORY}
    POETRY_HTTP_BASIC_ARTIFACTORY_DEV_USERNAME: ${ARTIFACTORY_USER}
    POETRY_HTTP_BASIC_ARTIFACTORY_DEV_PASSWORD: ${ARTIFACTORY_PASS}
  before_script:
    - apt-get -qq update
    - apt-get install -y --no-install-recommends git
    - pip install poetry==1.8.2
  script:
    - poetry self add poetry-git-version-plugin
    - poetry publish --repository artifactory-dev
  dependencies:
    - build
  rules:
    - if: $CI_COMMIT_TAG
  tags:
    - kubernetes
